{"ast":null,"code":"// Generate demo glucose data for development\nexport const generateDemoGlucoseData = (hours = 24) => {\n  const data = [];\n  const now = new Date();\n\n  // Generate data points every 15 minutes\n  for (let i = hours; i >= 0; i--) {\n    const timestamp = new Date(now.getTime() - i * 60 * 60 * 1000);\n\n    // Generate realistic glucose values with some variation\n    let baseValue = 120; // Base glucose level\n    let variation = Math.sin(i * 0.5) * 40; // Sinusoidal variation\n    let randomNoise = (Math.random() - 0.5) * 20; // Random noise\n\n    let value = Math.round(baseValue + variation + randomNoise);\n\n    // Ensure values stay within realistic bounds\n    value = Math.max(60, Math.min(300, value));\n\n    // Determine trend based on value changes\n    let trend = 0;\n    let trendArrow = '→';\n    if (i > 0) {\n      var _data;\n      const prevValue = ((_data = data[data.length - 1]) === null || _data === void 0 ? void 0 : _data.value) || value;\n      const diff = value - prevValue;\n      if (Math.abs(diff) > 10) {\n        trend = diff > 0 ? 1 : -1;\n        trendArrow = diff > 0 ? '↗' : '↘';\n      } else if (Math.abs(diff) > 5) {\n        trend = diff > 0 ? 0.5 : -0.5;\n        trendArrow = diff > 0 ? '↗' : '↘';\n      }\n    }\n\n    // Determine status\n    let status;\n    if (value < 70) status = 'low';else if (value < 180) status = 'normal';else if (value < 250) status = 'high';else status = 'critical';\n    data.push({\n      timestamp,\n      value,\n      trend,\n      trendArrow,\n      status,\n      unit: 'mg/dL'\n    });\n  }\n  return data;\n};\n\n// Generate current demo reading\nexport const generateCurrentDemoReading = () => {\n  const now = new Date();\n  const baseValue = 120;\n  const variation = Math.sin(now.getHours() * 0.5) * 30;\n  const randomNoise = (Math.random() - 0.5) * 15;\n  let value = Math.round(baseValue + variation + randomNoise);\n  value = Math.max(60, Math.min(300, value));\n  let status;\n  if (value < 70) status = 'low';else if (value < 180) status = 'normal';else if (value < 250) status = 'high';else status = 'critical';\n  return {\n    timestamp: now,\n    value,\n    trend: Math.random() > 0.5 ? 1 : -1,\n    trendArrow: Math.random() > 0.5 ? '↗' : '↘',\n    status,\n    unit: 'mg/dL'\n  };\n};\n\n// Demo patient data\nexport const demoPatient = {\n  id: 'demo-patient-123',\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com'\n};\n\n// Demo connections\nexport const demoConnections = [{\n  id: 'demo-sensor-001',\n  patientId: 'demo-patient-123',\n  status: 'active',\n  lastSync: new Date().toISOString()\n}, {\n  id: 'demo-sensor-002',\n  patientId: 'demo-patient-123',\n  status: 'inactive',\n  lastSync: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()\n}];","map":{"version":3,"names":["generateDemoGlucoseData","hours","data","now","Date","i","timestamp","getTime","baseValue","variation","Math","sin","randomNoise","random","value","round","max","min","trend","trendArrow","_data","prevValue","length","diff","abs","status","push","unit","generateCurrentDemoReading","getHours","demoPatient","id","firstName","lastName","email","demoConnections","patientId","lastSync","toISOString"],"sources":["/Users/vlad/cursorai/src/services/demoData.ts"],"sourcesContent":["import { GlucoseReading } from '../types/libre';\n\n// Generate demo glucose data for development\nexport const generateDemoGlucoseData = (hours: number = 24): GlucoseReading[] => {\n  const data: GlucoseReading[] = [];\n  const now = new Date();\n  \n  // Generate data points every 15 minutes\n  for (let i = hours; i >= 0; i--) {\n    const timestamp = new Date(now.getTime() - i * 60 * 60 * 1000);\n    \n    // Generate realistic glucose values with some variation\n    let baseValue = 120; // Base glucose level\n    let variation = Math.sin(i * 0.5) * 40; // Sinusoidal variation\n    let randomNoise = (Math.random() - 0.5) * 20; // Random noise\n    \n    let value = Math.round(baseValue + variation + randomNoise);\n    \n    // Ensure values stay within realistic bounds\n    value = Math.max(60, Math.min(300, value));\n    \n    // Determine trend based on value changes\n    let trend = 0;\n    let trendArrow = '→';\n    \n    if (i > 0) {\n      const prevValue = data[data.length - 1]?.value || value;\n      const diff = value - prevValue;\n      \n      if (Math.abs(diff) > 10) {\n        trend = diff > 0 ? 1 : -1;\n        trendArrow = diff > 0 ? '↗' : '↘';\n      } else if (Math.abs(diff) > 5) {\n        trend = diff > 0 ? 0.5 : -0.5;\n        trendArrow = diff > 0 ? '↗' : '↘';\n      }\n    }\n    \n    // Determine status\n    let status: 'low' | 'normal' | 'high' | 'critical';\n    if (value < 70) status = 'low';\n    else if (value < 180) status = 'normal';\n    else if (value < 250) status = 'high';\n    else status = 'critical';\n    \n    data.push({\n      timestamp,\n      value,\n      trend,\n      trendArrow,\n      status,\n      unit: 'mg/dL',\n    });\n  }\n  \n  return data;\n};\n\n// Generate current demo reading\nexport const generateCurrentDemoReading = (): GlucoseReading => {\n  const now = new Date();\n  const baseValue = 120;\n  const variation = Math.sin(now.getHours() * 0.5) * 30;\n  const randomNoise = (Math.random() - 0.5) * 15;\n  \n  let value = Math.round(baseValue + variation + randomNoise);\n  value = Math.max(60, Math.min(300, value));\n  \n  let status: 'low' | 'normal' | 'high' | 'critical';\n  if (value < 70) status = 'low';\n  else if (value < 180) status = 'normal';\n  else if (value < 250) status = 'high';\n  else status = 'critical';\n  \n  return {\n    timestamp: now,\n    value,\n    trend: Math.random() > 0.5 ? 1 : -1,\n    trendArrow: Math.random() > 0.5 ? '↗' : '↘',\n    status,\n    unit: 'mg/dL',\n  };\n};\n\n// Demo patient data\nexport const demoPatient = {\n  id: 'demo-patient-123',\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com',\n};\n\n// Demo connections\nexport const demoConnections = [\n  {\n    id: 'demo-sensor-001',\n    patientId: 'demo-patient-123',\n    status: 'active' as const,\n    lastSync: new Date().toISOString(),\n  },\n  {\n    id: 'demo-sensor-002',\n    patientId: 'demo-patient-123',\n    status: 'inactive' as const,\n    lastSync: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n  },\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}