{"ast":null,"code":"var _jsxFileName = \"/Users/vlad/cursorai/src/App.tsx\";\nimport React from 'react';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // ðŸ”“ TEMPORARILY DISABLED AUTHENTICATION\n  // This bypasses the login form and always shows the Dashboard\n  // To re-enable: uncomment the authentication logic below\n\n  // TODO: Re-enable authentication when ready\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // const [isLoading, setIsLoading] = useState(true);\n  // \n  // useEffect(() => {\n  //   const checkAuth = () => {\n  //     const isAuth = libreApiService.isAuthenticated();\n  //     setIsAuthenticated(isAuth);\n  //     setIsLoading(false);\n  //   };\n  //   checkAuth();\n  // }, []);\n  // \n  // const handleLoginSuccess = () => {\n  //   setIsAuthenticated(true);\n  // };\n  // \n  // if (isLoading) {\n  //   return <LoadingSpinner />;\n  // }\n  // \n  // return (\n  //   <div className=\"App\">\n  //     {isAuthenticated ? <Dashboard /> : <LoginForm onLoginSuccess={handleLoginSuccess} />}\n  //   </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Dashboard","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vlad/cursorai/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nconst App: React.FC = () => {\n  // ðŸ”“ TEMPORARILY DISABLED AUTHENTICATION\n  // This bypasses the login form and always shows the Dashboard\n  // To re-enable: uncomment the authentication logic below\n\n  // TODO: Re-enable authentication when ready\n  // const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // const [isLoading, setIsLoading] = useState(true);\n  // \n  // useEffect(() => {\n  //   const checkAuth = () => {\n  //     const isAuth = libreApiService.isAuthenticated();\n  //     setIsAuthenticated(isAuth);\n  //     setIsLoading(false);\n  //   };\n  //   checkAuth();\n  // }, []);\n  // \n  // const handleLoginSuccess = () => {\n  //   setIsAuthenticated(true);\n  // };\n  // \n  // if (isLoading) {\n  //   return <LoadingSpinner />;\n  // }\n  // \n  // return (\n  //   <div className=\"App\">\n  //     {isAuthenticated ? <Dashboard /> : <LoginForm onLoginSuccess={handleLoginSuccess} />}\n  //   </div>\n  // );\n\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAC1B;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA,CAACF,SAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACC,EAAA,GArCIP,GAAa;AAuCnB,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}